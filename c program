c++ program

// [dynamic programming] code on common subsequences in two strings
#include<iostream>
using namespace std;
void lcsAlgo(char *s1,char *s2, int m , int n)
{
    int Lcs_table[m+1][n+1];
    int i,j;
    for(i=0;i<=m;i++)
    {
        for(j=0;j<=n;j++)
        {
            if(i==0 || j==0)
            Lcs_table[i][j]=0;
            else if(s1[i-1]==s2[j-1])
            Lcs_table[i][j]=Lcs_table[i-1][j-1]+1;
            else
            Lcs_table[i][j]=max(Lcs_table[i-1][j],Lcs_table[i][j-1]);
        }
    }
    int index=Lcs_table[m][n];
    char lcsAlgo[index+1];
    lcsalgo[index]='\0';
    int i=m,j=n;
    while(i>0 && j>0)
    {
        if(s1[i-1]==s2[j-1])
        {
            lcsAlgo[index-1]=s1[i-1];
            i--;
            j--;
            index--;
        }
        else if(Lcs_table[i-1][j]>Lcs_table[i][j-1])
        i--;
        else
        j--;
    }
    cout<< "s1: " << s1 << "\ns2:" << s2 << "\nLcs: " << lcsAlgo << "\n";
}
 int main() {
  char S1[] = "ACADB";
  char S2[] = "CBDA";
  int m = strlen(S1);
  int n = strlen(S2);

  lcsAlgo(S1, S2, m, n);
}
